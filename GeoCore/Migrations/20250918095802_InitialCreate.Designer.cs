// <auto-generated />
using System;
using GeoCore.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GeoCore.Migrations
{
    [DbContext(typeof(GeoCoreDbContext))]
    [Migration("20250918095802_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GeoCore.Entities.Apartment", b =>
                {
                    b.Property<string>("ApartmentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApartmentDoor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApartmentFloor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ApartmentPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BuildingId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HasGarage")
                        .HasColumnType("bit");

                    b.Property<bool>("HasLift")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfBathrooms")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfRooms")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApartmentId");

                    b.HasIndex("BuildingId");

                    b.ToTable("Apartments");

                    b.HasData(
                        new
                        {
                            ApartmentId = "APT001",
                            ApartmentDoor = "1A",
                            ApartmentFloor = "1",
                            ApartmentPrice = 120000m,
                            BuildingId = "BLD001",
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasGarage = false,
                            HasLift = true,
                            NumberOfBathrooms = 2,
                            NumberOfRooms = 3,
                            Status = "ocupado"
                        },
                        new
                        {
                            ApartmentId = "APT002",
                            ApartmentDoor = "1B",
                            ApartmentFloor = "1",
                            ApartmentPrice = 125000m,
                            BuildingId = "BLD001",
                            CreatedDate = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasGarage = true,
                            HasLift = true,
                            NumberOfBathrooms = 1,
                            NumberOfRooms = 2,
                            Status = "libre"
                        },
                        new
                        {
                            ApartmentId = "APT003",
                            ApartmentDoor = "2A",
                            ApartmentFloor = "2",
                            ApartmentPrice = 130000m,
                            BuildingId = "BLD001",
                            CreatedDate = new DateTime(2023, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasGarage = false,
                            HasLift = true,
                            NumberOfBathrooms = 2,
                            NumberOfRooms = 4,
                            Status = "reservado"
                        },
                        new
                        {
                            ApartmentId = "APT004",
                            ApartmentDoor = "1A",
                            ApartmentFloor = "1",
                            ApartmentPrice = 110000m,
                            BuildingId = "BLD002",
                            CreatedDate = new DateTime(2023, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasGarage = false,
                            HasLift = false,
                            NumberOfBathrooms = 1,
                            NumberOfRooms = 2,
                            Status = "ocupado"
                        },
                        new
                        {
                            ApartmentId = "APT005",
                            ApartmentDoor = "2A",
                            ApartmentFloor = "2",
                            ApartmentPrice = 115000m,
                            BuildingId = "BLD002",
                            CreatedDate = new DateTime(2023, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasGarage = true,
                            HasLift = true,
                            NumberOfBathrooms = 2,
                            NumberOfRooms = 3,
                            Status = "libre"
                        },
                        new
                        {
                            ApartmentId = "APT006",
                            ApartmentDoor = "3A",
                            ApartmentFloor = "3",
                            ApartmentPrice = 118000m,
                            BuildingId = "BLD002",
                            CreatedDate = new DateTime(2023, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasGarage = false,
                            HasLift = false,
                            NumberOfBathrooms = 1,
                            NumberOfRooms = 2,
                            Status = "reservado"
                        },
                        new
                        {
                            ApartmentId = "APT013",
                            ApartmentDoor = "1A",
                            ApartmentFloor = "1",
                            ApartmentPrice = 125000m,
                            BuildingId = "BLD005",
                            CreatedDate = new DateTime(2023, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasGarage = true,
                            HasLift = true,
                            NumberOfBathrooms = 2,
                            NumberOfRooms = 3,
                            Status = "ocupado"
                        },
                        new
                        {
                            ApartmentId = "APT014",
                            ApartmentDoor = "2A",
                            ApartmentFloor = "2",
                            ApartmentPrice = 130000m,
                            BuildingId = "BLD005",
                            CreatedDate = new DateTime(2023, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasGarage = false,
                            HasLift = true,
                            NumberOfBathrooms = 2,
                            NumberOfRooms = 4,
                            Status = "libre"
                        },
                        new
                        {
                            ApartmentId = "APT015",
                            ApartmentDoor = "3A",
                            ApartmentFloor = "3",
                            ApartmentPrice = 135000m,
                            BuildingId = "BLD005",
                            CreatedDate = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasGarage = true,
                            HasLift = false,
                            NumberOfBathrooms = 1,
                            NumberOfRooms = 2,
                            Status = "reservado"
                        },
                        new
                        {
                            ApartmentId = "APT031",
                            ApartmentDoor = "1A",
                            ApartmentFloor = "1",
                            ApartmentPrice = 150000m,
                            BuildingId = "BLD011",
                            CreatedDate = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasGarage = true,
                            HasLift = true,
                            NumberOfBathrooms = 2,
                            NumberOfRooms = 3,
                            Status = "ocupado"
                        },
                        new
                        {
                            ApartmentId = "APT032",
                            ApartmentDoor = "2A",
                            ApartmentFloor = "2",
                            ApartmentPrice = 155000m,
                            BuildingId = "BLD011",
                            CreatedDate = new DateTime(2023, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasGarage = false,
                            HasLift = true,
                            NumberOfBathrooms = 2,
                            NumberOfRooms = 3,
                            Status = "libre"
                        },
                        new
                        {
                            ApartmentId = "APT040",
                            ApartmentDoor = "1A",
                            ApartmentFloor = "1",
                            ApartmentPrice = 185000m,
                            BuildingId = "BLD012",
                            CreatedDate = new DateTime(2021, 3, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasGarage = true,
                            HasLift = true,
                            NumberOfBathrooms = 2,
                            NumberOfRooms = 3,
                            Status = "ocupado"
                        },
                        new
                        {
                            ApartmentId = "APT041",
                            ApartmentDoor = "2B",
                            ApartmentFloor = "2",
                            ApartmentPrice = 175000m,
                            BuildingId = "BLD012",
                            CreatedDate = new DateTime(2021, 3, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasGarage = false,
                            HasLift = true,
                            NumberOfBathrooms = 1,
                            NumberOfRooms = 2,
                            Status = "libre"
                        },
                        new
                        {
                            ApartmentId = "APT050",
                            ApartmentDoor = "1C",
                            ApartmentFloor = "1",
                            ApartmentPrice = 210000m,
                            BuildingId = "BLD013",
                            CreatedDate = new DateTime(2022, 5, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasGarage = true,
                            HasLift = true,
                            NumberOfBathrooms = 2,
                            NumberOfRooms = 4,
                            Status = "ocupado"
                        },
                        new
                        {
                            ApartmentId = "APT051",
                            ApartmentDoor = "3A",
                            ApartmentFloor = "3",
                            ApartmentPrice = 160000m,
                            BuildingId = "BLD013",
                            CreatedDate = new DateTime(2022, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasGarage = false,
                            HasLift = false,
                            NumberOfBathrooms = 1,
                            NumberOfRooms = 2,
                            Status = "reservado"
                        });
                });

            modelBuilder.Entity("GeoCore.Entities.Building", b =>
                {
                    b.Property<string>("BuildingId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BuildingId");

                    b.ToTable("Buildings");

                    b.HasData(
                        new
                        {
                            BuildingId = "BLD001",
                            Address = "Calle Mayor 1",
                            BuildingCode = "BLD001",
                            City = "Madrid",
                            Latitude = 40.416977000000003,
                            Longitude = -3.7075230000000001,
                            Name = "Edificio Central",
                            PostalCode = "28013",
                            PurchaseDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Active"
                        },
                        new
                        {
                            BuildingId = "BLD002",
                            Address = "Carrer de Sardenya 350",
                            BuildingCode = "BLD002",
                            City = "Barcelona",
                            Latitude = 41.404319999999998,
                            Longitude = 2.1740300000000001,
                            Name = "Edificio Diagonal",
                            PostalCode = "08025",
                            PurchaseDate = new DateTime(2021, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Rented"
                        },
                        new
                        {
                            BuildingId = "BLD003",
                            Address = "Calle Feria 123",
                            BuildingCode = "BLD003",
                            City = "Sevilla",
                            Latitude = 37.400649999999999,
                            Longitude = -5.9903500000000003,
                            Name = "Edificio Constitución",
                            PostalCode = "41002",
                            PurchaseDate = new DateTime(2022, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Under Maintenance"
                        },
                        new
                        {
                            BuildingId = "BLD004",
                            Address = "Avenida de Blasco Ibáñez 152",
                            BuildingCode = "BLD004",
                            City = "Valencia",
                            Latitude = 39.474420000000002,
                            Longitude = -0.34734999999999999,
                            Name = "Edificio Paz",
                            PostalCode = "46022",
                            PurchaseDate = new DateTime(2019, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Active"
                        },
                        new
                        {
                            BuildingId = "BLD005",
                            Address = "Calle Licenciado Poza 50",
                            BuildingCode = "BLD005",
                            City = "Bilbao",
                            Latitude = 43.26379,
                            Longitude = -2.94347,
                            Name = "Edificio Gran Vía",
                            PostalCode = "48011",
                            PurchaseDate = new DateTime(2018, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Rented"
                        },
                        new
                        {
                            BuildingId = "BLD006",
                            Address = "Calle Alhamar 28",
                            BuildingCode = "BLD006",
                            City = "Granada",
                            Latitude = 37.172899999999998,
                            Longitude = -3.6038000000000001,
                            Name = "Edificio Reyes Católicos",
                            PostalCode = "18004",
                            PurchaseDate = new DateTime(2020, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Active"
                        },
                        new
                        {
                            BuildingId = "BLD007",
                            Address = "Calle de San Vicente Mártir 55",
                            BuildingCode = "BLD007",
                            City = "Zaragoza",
                            Latitude = 41.648589999999999,
                            Longitude = -0.88592000000000004,
                            Name = "Edificio Independencia",
                            PostalCode = "50008",
                            PurchaseDate = new DateTime(2021, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Under Maintenance"
                        },
                        new
                        {
                            BuildingId = "BLD008",
                            Address = "Calle Marqués de Larios 4",
                            BuildingCode = "BLD008",
                            City = "Malaga",
                            Latitude = 36.719647999999999,
                            Longitude = -4.421265,
                            Name = "Edificio Larios",
                            PostalCode = "29005",
                            PurchaseDate = new DateTime(2019, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Active"
                        },
                        new
                        {
                            BuildingId = "BLD009",
                            Address = "Calle Pintor Aparicio 16",
                            BuildingCode = "BLD009",
                            City = "Alicante",
                            Latitude = 38.344900000000003,
                            Longitude = -0.49080000000000001,
                            Name = "Edificio Maisonnave",
                            PostalCode = "03003",
                            PurchaseDate = new DateTime(2022, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Rented"
                        },
                        new
                        {
                            BuildingId = "BLD010",
                            Address = "Calle Estafeta 1",
                            BuildingCode = "BLD010",
                            City = "Pamplona",
                            Latitude = 42.818452999999998,
                            Longitude = -1.6441319999999999,
                            Name = "Edificio Estafeta",
                            PostalCode = "31001",
                            PurchaseDate = new DateTime(2020, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Active"
                        },
                        new
                        {
                            BuildingId = "BLD011",
                            Address = "Calle Pérez Goyena 28",
                            BuildingCode = "BLD011",
                            City = "Pamplona",
                            Latitude = 42.800899999999999,
                            Longitude = -1.6168,
                            Name = "Edificio Pérez Goyena",
                            PostalCode = "31620",
                            PurchaseDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Rented"
                        },
                        new
                        {
                            BuildingId = "BLD012",
                            Address = "Avenida de la Alameda 10",
                            BuildingCode = "BLD012",
                            City = "Valencia",
                            Latitude = 39.474800000000002,
                            Longitude = -0.35699999999999998,
                            Name = "Edificio Alameda",
                            PostalCode = "46023",
                            PurchaseDate = new DateTime(2021, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Active"
                        },
                        new
                        {
                            BuildingId = "BLD013",
                            Address = "Calle Tomás Heredia 22",
                            BuildingCode = "BLD013",
                            City = "Malaga",
                            Latitude = 36.715600000000002,
                            Longitude = -4.4231999999999996,
                            Name = "Edificio Soho",
                            PostalCode = "29001",
                            PurchaseDate = new DateTime(2022, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Rented"
                        });
                });

            modelBuilder.Entity("GeoCore.Entities.CashFlow", b =>
                {
                    b.Property<string>("CashFlowId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("BuildingId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CashFlowId");

                    b.HasIndex("BuildingId");

                    b.ToTable("CashFlows");

                    b.HasData(
                        new
                        {
                            CashFlowId = "CAF001",
                            Amount = 350000m,
                            BuildingId = "BLD001",
                            Date = new DateTime(2020, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Compra inicial"
                        },
                        new
                        {
                            CashFlowId = "CAF002",
                            Amount = 20000m,
                            BuildingId = "BLD001",
                            Date = new DateTime(2021, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Alquiler anual"
                        },
                        new
                        {
                            CashFlowId = "CAF003",
                            Amount = 5000m,
                            BuildingId = "BLD001",
                            Date = new DateTime(2021, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Reforma cocina"
                        },
                        new
                        {
                            CashFlowId = "CAF004",
                            Amount = 21000m,
                            BuildingId = "BLD001",
                            Date = new DateTime(2022, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Alquiler anual"
                        },
                        new
                        {
                            CashFlowId = "CAF005",
                            Amount = 1200m,
                            BuildingId = "BLD001",
                            Date = new DateTime(2022, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Seguro edificio"
                        },
                        new
                        {
                            CashFlowId = "CAF006",
                            Amount = 22000m,
                            BuildingId = "BLD001",
                            Date = new DateTime(2023, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Alquiler anual"
                        },
                        new
                        {
                            CashFlowId = "CAF007",
                            Amount = 320000m,
                            BuildingId = "BLD002",
                            Date = new DateTime(2021, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Compra inicial"
                        },
                        new
                        {
                            CashFlowId = "CAF008",
                            Amount = 18000m,
                            BuildingId = "BLD002",
                            Date = new DateTime(2022, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Alquiler anual"
                        },
                        new
                        {
                            CashFlowId = "CAF009",
                            Amount = 3000m,
                            BuildingId = "BLD002",
                            Date = new DateTime(2022, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Reforma baño"
                        },
                        new
                        {
                            CashFlowId = "CAF010",
                            Amount = 18500m,
                            BuildingId = "BLD002",
                            Date = new DateTime(2023, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Alquiler anual"
                        },
                        new
                        {
                            CashFlowId = "CAF011",
                            Amount = 950m,
                            BuildingId = "BLD002",
                            Date = new DateTime(2023, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Impuesto IBI"
                        },
                        new
                        {
                            CashFlowId = "CAF012",
                            Amount = 280000m,
                            BuildingId = "BLD003",
                            Date = new DateTime(2022, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Compra inicial"
                        },
                        new
                        {
                            CashFlowId = "CAF013",
                            Amount = 17000m,
                            BuildingId = "BLD003",
                            Date = new DateTime(2023, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Alquiler anual"
                        },
                        new
                        {
                            CashFlowId = "CAF014",
                            Amount = 2500m,
                            BuildingId = "BLD003",
                            Date = new DateTime(2023, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Gasto extraordinario"
                        },
                        new
                        {
                            CashFlowId = "CAF015",
                            Amount = 250000m,
                            BuildingId = "BLD004",
                            Date = new DateTime(2019, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Compra inicial"
                        },
                        new
                        {
                            CashFlowId = "CAF016",
                            Amount = 16000m,
                            BuildingId = "BLD004",
                            Date = new DateTime(2020, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Alquiler anual"
                        },
                        new
                        {
                            CashFlowId = "CAF017",
                            Amount = 1100m,
                            BuildingId = "BLD004",
                            Date = new DateTime(2020, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Limpieza fachada"
                        },
                        new
                        {
                            CashFlowId = "CAF018",
                            Amount = 400000m,
                            BuildingId = "BLD005",
                            Date = new DateTime(2018, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Compra inicial"
                        },
                        new
                        {
                            CashFlowId = "CAF019",
                            Amount = 19000m,
                            BuildingId = "BLD005",
                            Date = new DateTime(2019, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Alquiler anual"
                        },
                        new
                        {
                            CashFlowId = "CAF020",
                            Amount = 4000m,
                            BuildingId = "BLD005",
                            Date = new DateTime(2019, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Reforma eléctrica"
                        },
                        new
                        {
                            CashFlowId = "CAF021",
                            Amount = 20000m,
                            BuildingId = "BLD005",
                            Date = new DateTime(2020, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Alquiler anual"
                        },
                        new
                        {
                            CashFlowId = "CAF022",
                            Amount = 950m,
                            BuildingId = "BLD005",
                            Date = new DateTime(2020, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Impuesto IBI"
                        },
                        new
                        {
                            CashFlowId = "CAF023",
                            Amount = 210000m,
                            BuildingId = "BLD006",
                            Date = new DateTime(2020, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Compra inicial"
                        },
                        new
                        {
                            CashFlowId = "CAF024",
                            Amount = 14000m,
                            BuildingId = "BLD006",
                            Date = new DateTime(2021, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Alquiler anual"
                        },
                        new
                        {
                            CashFlowId = "CAF025",
                            Amount = 90000m,
                            BuildingId = "BLD007",
                            Date = new DateTime(2021, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Compra inicial"
                        },
                        new
                        {
                            CashFlowId = "CAF026",
                            Amount = 95000m,
                            BuildingId = "BLD008",
                            Date = new DateTime(2019, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Compra inicial"
                        },
                        new
                        {
                            CashFlowId = "CAF027",
                            Amount = 100000m,
                            BuildingId = "BLD009",
                            Date = new DateTime(2022, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Compra inicial"
                        },
                        new
                        {
                            CashFlowId = "CAF028",
                            Amount = 300000m,
                            BuildingId = "BLD010",
                            Date = new DateTime(2020, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Compra inicial"
                        },
                        new
                        {
                            CashFlowId = "CAF029",
                            Amount = 24000m,
                            BuildingId = "BLD010",
                            Date = new DateTime(2021, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Alquiler anual"
                        },
                        new
                        {
                            CashFlowId = "CAF030",
                            Amount = 270000m,
                            BuildingId = "BLD011",
                            Date = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Compra inicial"
                        },
                        new
                        {
                            CashFlowId = "CAF031",
                            Amount = 22000m,
                            BuildingId = "BLD011",
                            Date = new DateTime(2022, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Alquiler anual"
                        },
                        new
                        {
                            CashFlowId = "CAF032",
                            Amount = 1200m,
                            BuildingId = "BLD011",
                            Date = new DateTime(2022, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Seguro edificio"
                        },
                        new
                        {
                            CashFlowId = "CAF040",
                            Amount = 320000m,
                            BuildingId = "BLD012",
                            Date = new DateTime(2021, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Compra inicial"
                        },
                        new
                        {
                            CashFlowId = "CAF041",
                            Amount = 12000m,
                            BuildingId = "BLD012",
                            Date = new DateTime(2022, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Alquiler anual"
                        },
                        new
                        {
                            CashFlowId = "CAF042",
                            Amount = 2500m,
                            BuildingId = "BLD012",
                            Date = new DateTime(2022, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Reforma fachada"
                        },
                        new
                        {
                            CashFlowId = "CAF050",
                            Amount = 410000m,
                            BuildingId = "BLD013",
                            Date = new DateTime(2022, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Compra inicial"
                        },
                        new
                        {
                            CashFlowId = "CAF051",
                            Amount = 15000m,
                            BuildingId = "BLD013",
                            Date = new DateTime(2023, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Alquiler anual"
                        },
                        new
                        {
                            CashFlowId = "CAF052",
                            Amount = 1800m,
                            BuildingId = "BLD013",
                            Date = new DateTime(2023, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = "Gasto comunidad"
                        });
                });

            modelBuilder.Entity("GeoCore.Entities.MaintenanceEvent", b =>
                {
                    b.Property<string>("MaintenanceEventId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BuildingId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Cost")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaintenanceEventId");

                    b.HasIndex("BuildingId");

                    b.ToTable("MaintenanceEvents");

                    b.HasData(
                        new
                        {
                            MaintenanceEventId = "MAE001",
                            BuildingId = "BLD001",
                            Cost = 1000m,
                            Date = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Revisión ascensor"
                        },
                        new
                        {
                            MaintenanceEventId = "MAE002",
                            BuildingId = "BLD001",
                            Cost = 1200m,
                            Date = new DateTime(2023, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Cambio de caldera"
                        },
                        new
                        {
                            MaintenanceEventId = "MAE003",
                            BuildingId = "BLD002",
                            Cost = 900m,
                            Date = new DateTime(2023, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Pintura fachada"
                        },
                        new
                        {
                            MaintenanceEventId = "MAE004",
                            BuildingId = "BLD002",
                            Cost = 1100m,
                            Date = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Reparación tejado"
                        },
                        new
                        {
                            MaintenanceEventId = "MAE005",
                            BuildingId = "BLD003",
                            Cost = 1200m,
                            Date = new DateTime(2023, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Cambio caldera"
                        },
                        new
                        {
                            MaintenanceEventId = "MAE006",
                            BuildingId = "BLD004",
                            Cost = 1100m,
                            Date = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Reparación tejado"
                        },
                        new
                        {
                            MaintenanceEventId = "MAE007",
                            BuildingId = "BLD005",
                            Cost = 900m,
                            Date = new DateTime(2023, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Revisión eléctrica"
                        },
                        new
                        {
                            MaintenanceEventId = "MAE008",
                            BuildingId = "BLD005",
                            Cost = 1200m,
                            Date = new DateTime(2024, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Cambio caldera"
                        },
                        new
                        {
                            MaintenanceEventId = "MAE009",
                            BuildingId = "BLD006",
                            Cost = 800m,
                            Date = new DateTime(2023, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Pintura fachada"
                        },
                        new
                        {
                            MaintenanceEventId = "MAE010",
                            BuildingId = "BLD010",
                            Cost = 1000m,
                            Date = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Reparación portal"
                        },
                        new
                        {
                            MaintenanceEventId = "MAE011",
                            BuildingId = "BLD011",
                            Cost = 900m,
                            Date = new DateTime(2023, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Reparación tejado ático"
                        },
                        new
                        {
                            MaintenanceEventId = "MAE020",
                            BuildingId = "BLD012",
                            Cost = 950m,
                            Date = new DateTime(2022, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Revisión ascensor"
                        },
                        new
                        {
                            MaintenanceEventId = "MAE021",
                            BuildingId = "BLD013",
                            Cost = 1100m,
                            Date = new DateTime(2023, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Reparación portal"
                        });
                });

            modelBuilder.Entity("GeoCore.Entities.Rental", b =>
                {
                    b.Property<string>("RentalId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApartmentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Zone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RentalId");

                    b.ToTable("Rentals");

                    b.HasData(
                        new
                        {
                            RentalId = "REN001",
                            ApartmentId = "APT004",
                            EndDate = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsConfirmed = true,
                            PostalCode = "08025",
                            Price = 15000m,
                            StartDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Zone = "Eixample"
                        },
                        new
                        {
                            RentalId = "REN002",
                            ApartmentId = "APT005",
                            EndDate = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsConfirmed = true,
                            PostalCode = "08025",
                            Price = 14000m,
                            StartDate = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Zone = "Eixample"
                        },
                        new
                        {
                            RentalId = "REN003",
                            ApartmentId = "APT006",
                            EndDate = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsConfirmed = true,
                            PostalCode = "08025",
                            Price = 13000m,
                            StartDate = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Zone = "Eixample"
                        },
                        new
                        {
                            RentalId = "REN004",
                            ApartmentId = "APT013",
                            EndDate = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsConfirmed = true,
                            PostalCode = "48011",
                            Price = 16000m,
                            StartDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Zone = "Gran Via"
                        },
                        new
                        {
                            RentalId = "REN005",
                            ApartmentId = "APT014",
                            EndDate = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsConfirmed = true,
                            PostalCode = "48011",
                            Price = 15500m,
                            StartDate = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Zone = "Gran Via"
                        },
                        new
                        {
                            RentalId = "REN006",
                            ApartmentId = "APT015",
                            EndDate = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsConfirmed = true,
                            PostalCode = "48011",
                            Price = 15000m,
                            StartDate = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Zone = "Gran Via"
                        },
                        new
                        {
                            RentalId = "REN007",
                            ApartmentId = "APT025",
                            EndDate = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsConfirmed = true,
                            PostalCode = "03003",
                            Price = 14000m,
                            StartDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Zone = "Centro"
                        },
                        new
                        {
                            RentalId = "REN008",
                            ApartmentId = "APT026",
                            EndDate = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsConfirmed = true,
                            PostalCode = "03003",
                            Price = 13500m,
                            StartDate = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Zone = "Centro"
                        },
                        new
                        {
                            RentalId = "REN009",
                            ApartmentId = "APT027",
                            EndDate = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsConfirmed = true,
                            PostalCode = "03003",
                            Price = 13000m,
                            StartDate = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Zone = "Centro"
                        },
                        new
                        {
                            RentalId = "REN010",
                            ApartmentId = "APT031",
                            EndDate = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsConfirmed = true,
                            PostalCode = "31620",
                            Price = 17000m,
                            StartDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Zone = "Iturrama"
                        },
                        new
                        {
                            RentalId = "REN011",
                            ApartmentId = "APT032",
                            EndDate = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsConfirmed = true,
                            PostalCode = "31620",
                            Price = 16500m,
                            StartDate = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Zone = "Iturrama"
                        },
                        new
                        {
                            RentalId = "REN020",
                            ApartmentId = "APT040",
                            EndDate = new DateTime(2022, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsConfirmed = true,
                            PostalCode = "46023",
                            Price = 12000m,
                            StartDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Zone = "Camins al Grau"
                        },
                        new
                        {
                            RentalId = "REN021",
                            ApartmentId = "APT050",
                            EndDate = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsConfirmed = true,
                            PostalCode = "29001",
                            Price = 15000m,
                            StartDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Zone = "Soho"
                        });
                });

            modelBuilder.Entity("GeoCore.Entities.Apartment", b =>
                {
                    b.HasOne("GeoCore.Entities.Building", "Building")
                        .WithMany("Apartments")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("GeoCore.Entities.CashFlow", b =>
                {
                    b.HasOne("GeoCore.Entities.Building", null)
                        .WithMany("CashFlows")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GeoCore.Entities.MaintenanceEvent", b =>
                {
                    b.HasOne("GeoCore.Entities.Building", null)
                        .WithMany("MaintenanceEvents")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GeoCore.Entities.Building", b =>
                {
                    b.Navigation("Apartments");

                    b.Navigation("CashFlows");

                    b.Navigation("MaintenanceEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
